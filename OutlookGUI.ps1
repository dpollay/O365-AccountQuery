#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 362988c0-cb8c-4851-9d99-3086e106ca9c
# Source File: OutlookGUI.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
yR0AAB+LCAAAAAAABADVWV1v4jgUfV9p/oMVzWMEJCF8SBCpMMOo2um0Wzqz+1Y5iaGZGhvZTofs
r1/nCwpNiJMFZkaVUBN8c+71OT6+DqN75NEXxKIPUEAg/+EBJWPN1Jx3fwAwumXBMiAQzwKMvsAV
cm5DgSl9/vT1urXmi1H7zYA0zP2OPAFEtEZjbR5xgVatvwPi0x+8NaNslX7qoOgrHXzLsui2OvGf
DqYhFiFDY4JCwSDWwV3o4sD7E0UP9BmRsdvvQ9uze8bQ6qLOYKgBIlMZawv5vI8b7wmSJbryPBoS
8Vcoa9WA9xRgn8lQbUqJYBTztGCZ+x2ja8RElD1jigNExDz4F2lO1xrqwBoMRu18UElQPBOaUwZf
Gf6ANkJz8lCQxYKS4I8vMsEs8jOFfjnwY/z1qJ0E5NHVVH1iNFxP6ObsdC1jIJduusf4eTtbn6kH
hUxAc0xjoINh780UlRG0BVSISBVgdqQCbENh/AN0r4mPNppjq42eC7rWnBnEHKkEJBKZUewjBuYC
Cl4UVE3uJBSCkrNT6yYwSZ7HyT1Gb08HxrCgzDJ6X4EqRaUU920dmJZSwI7jjtr4hDT1hL5y9C3g
IcRzEWE0gd7zlGLKNOeBhUUiOTADaV3e8940PCa39h1ABrVTneSWcHD5CzqE1dQhDKuRQRTJoVg9
MuPaBqFiPw0N4g6xVcDjyf8d/GEKMSI+ZM0twujYjUwiR67jE1YDnyjaC8q4q5XTKa0iB1Zyi19P
RddErti6EprJMZpzE3iMcroQYA4JB3PEgoUOBi3TXgslGvadpoEQk+TPrUKzhgrVEzqlBBPUM+1W
94H3FNd2iQ2LIS4j06c33rNMqSRbZQtKhfQaUyHoHkH/luColKdi4XWNuE/qKO5dmfBUikhlt2P7
8LhTm++48wn5BLKzs80TJBcyoynXEtzqqfcnO0B13uIzrFnkAPX8opi299uMTkDcxdvKmrRV7xk6
4LEXjifynKYwhwe7h/qS3xZQY/l2ddDv15JB0SHnRH1q/orjmsTvLpJJ+A361fuQ/PQ+w2zY8crc
z30oLlJjmQBU0/mfTcYNDTna6zQk8OPu7ima3YvblvnTRVj3zcw28xoSNPqyD+qqodR+MVPlWmWy
lXJk8XVxSLVWLtWHhlmeVUo5RnI/7vcKCy2jOTw2O6U8270aQFVMH6x/OVF3sj/mu9we81uHS79o
8R85euxfXHGOVpIZxPOx2Z3IyZi+gQQu0Uoitq5CQdM9b8e4pcq4ZbgLa2D3oG/1usiyR+0t0iHy
inuU4cA9ga6OoKT1XQLj5KulGjH+lewyQAz+CMiyCVbHWtiL/sIwfLsDLViN9c8KX6amgMkFQlkk
t5qXwEONKKtd3ZQydJHysqqkCcnSzlDb9jJ1lVH79U+3zn/F1usayR0AAA==#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2014 v4.1.58
     Generated on:       6/26/2014 2:12 PM
     Generated by:       dpollay
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2014
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

function OnApplicationLoad {
	#Note: This function is not called in Projects
	#Note: This function runs before the form is created
	#Note: To get the script directory in the Packager use: Split-Path $hostinvocation.MyCommand.path
	#Note: To get the console output in the Packager (Windows Mode) use: $ConsoleOutput (Type: System.Collections.ArrayList)
	#Important: Form controls cannot be accessed in this function
	#TODO: Add modules and custom code to validate the application load
	Import-Module ShowUI
	
	return $true #return true for success or false for failure
}

function OnApplicationExit {
	#Note: This function is not called in Projects
	#Note: This function runs after the form is closed
	#TODO: Add custom code to clean up and unload modules when the application exits
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-OutlookGUI_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formExchangeAccountQuery = New-Object 'System.Windows.Forms.Form'
	$groupbox4 = New-Object 'System.Windows.Forms.GroupBox'
	$buttonStats = New-Object 'System.Windows.Forms.Button'
	$groupbox3 = New-Object 'System.Windows.Forms.GroupBox'
	$buttonCalendar = New-Object 'System.Windows.Forms.Button'
	$buttonInbox = New-Object 'System.Windows.Forms.Button'
	$resultWindow = New-Object 'System.Windows.Forms.RichTextBox'
	$statusbar1 = New-Object 'System.Windows.Forms.StatusBar'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$buttonRun = New-Object 'System.Windows.Forms.Button'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$username = New-Object 'System.Windows.Forms.TextBox'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	$Author = "David Pollay"
	$versionNumber = "0.1"
	
	$statusbar = 'Author:  ' + $Author + ' | Version ' + $versionNumber
	
	
	
	
	
	
	
	function getMailbox{
		$resultWindow.Text = "Querying server..."	
		$getm = get-mailbox $username.Text
		$gets = Get-MailboxStatistics $username.Text
		$calendar = ":\Calendar"
		$getCalAvail = Get-MailboxFolderPermission ($username.Text + $Calendar) | where { ($_.FolderName -like "Calendar") -and ($_.User -like "Default") }
		$getFC = Get-MailboxPermission $username.Text | where { ($_.IsInherited -eq $false) -and -not ($_.User -like "NT Authority\SELF") -and ($_.User -like "*-FC") }
		
		$resultWindow.Text = "Display Name:  " + $getm.DisplayName
		$resultWindow.Text += "`r`nPrimary Address: " + $getm.PrimarySmtpAddress
		$resultWindow.Text += "`r`nMailbox Items:  " + $gets.ItemCount
		$resultWindow.Text += "`r`nMailbox Size:  " + $gets.TotalItemSize
		if ($getm.ForwardingSmtpAddress -eq $null)
		{
			$resultWindow.Text += "`r`nForwarding Status:  Not Forwarding to Groupwise"
		}
		else
		{
			$resultWindow.Text += "`r`nForwarding Status:  Forwarding to Groupwise"
			$resultWindow.Text += "`r`nSave Email then Forward:  " + $getm.DeliverToMailboxAndForward
			$resultWindow.Text += "`r`nForward to:  " + $getm.ForwardingSmtpAddress
		}
		$resultWindow.Text += "`r`nDefault Calendar Visibility:  " + $getCalAvail.AccessRights
		$resultWindow.Text += "`r`nMailbox Type:  " + $getm.RecipientTypeDetails
		if ($getm.RecipientTypeDetails -eq "SharedMailbox")
		{
			$resultWindow.Text += "`r`nFull Control User:  " + $getFC.User
			$form.Controls.Add($sharedPermissions)
		}
		else { }
		$resultWindow.Text += "`r`nWhen Created:  " + $getm.WhenCreated
	}
	
	function getFolderStats{
		$resultWindow.Text = "Querying Server..."
		get-MailboxFolderStatistics $username.Text | select Name, FolderPath, ItemsInFolder, FolderSize | Out-GridView
		$resultWindow.Text = "Query Complete"	
	}
	
	function getPermissions
	{
		get-mailboxfolderpermission ($username.Text + ":\Inbox") | Out-GridView
	}
	
	function getCalPermissions
	{
		get-mailboxfolderpermission ($username.Text + ":\Calendar") | Out-GridView
	}
	
	$formExchangeAccountQuery_Load={
		#TODO: Initialize Form Controls here
		import-pssession $(new-pssession -configurationname microsoft.exchange -ConnectionUri https://ps.outlook.com/powershell -Authentication Basic -AllowRedirection -Credential $(get-credential))
	}
	
	$buttonRun_MouseClick=[System.Windows.Forms.MouseEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
		#TODO: Place custom script here
		getMailbox
	}
	
	
	$username_KeyPress=[System.Windows.Forms.KeyPressEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.KeyPressEventArgs]
		#TODO: Place custom script here
		if ($_.KeyChar -eq [System.Windows.Forms.Keys]::Enter)
		{
			getMailbox
		}
	}
	
	$buttonInbox_Click={
		#TODO: Place custom script here
		getPermissions
	}
	
	$buttonCalendar_Click={
		#TODO: Place custom script here
		getCalPermissions
	}
	
	$buttonStats_Click={
		#TODO: Place custom script here
		getFolderStats
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formExchangeAccountQuery.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonStats.remove_Click($buttonStats_Click)
			$buttonCalendar.remove_Click($buttonCalendar_Click)
			$buttonInbox.remove_Click($buttonInbox_Click)
			$buttonRun.remove_MouseClick($buttonRun_MouseClick)
			$username.remove_KeyPress($username_KeyPress)
			$formExchangeAccountQuery.remove_Load($formExchangeAccountQuery_Load)
			$formExchangeAccountQuery.remove_Load($Form_StateCorrection_Load)
			$formExchangeAccountQuery.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formExchangeAccountQuery.SuspendLayout()
	$groupbox4.SuspendLayout()
	$groupbox3.SuspendLayout()
	$groupbox1.SuspendLayout()
	$groupbox2.SuspendLayout()
	#
	# formExchangeAccountQuery
	#
	$formExchangeAccountQuery.Controls.Add($groupbox4)
	$formExchangeAccountQuery.Controls.Add($groupbox3)
	$formExchangeAccountQuery.Controls.Add($resultWindow)
	$formExchangeAccountQuery.Controls.Add($statusbar1)
	$formExchangeAccountQuery.Controls.Add($groupbox1)
	$formExchangeAccountQuery.ClientSize = '439, 388'
	$formExchangeAccountQuery.Name = "formExchangeAccountQuery"
	$formExchangeAccountQuery.Text = "Exchange Account Query"
	$formExchangeAccountQuery.add_Load($formExchangeAccountQuery_Load)
	#
	# groupbox4
	#
	$groupbox4.Controls.Add($buttonStats)
	$groupbox4.Location = '218, 96'
	$groupbox4.Name = "groupbox4"
	$groupbox4.Size = '209, 51'
	$groupbox4.TabIndex = 5
	$groupbox4.TabStop = $False
	$groupbox4.Text = "Folder Stats"
	#
	# buttonStats
	#
	$buttonStats.Location = '6, 19'
	$buttonStats.Name = "buttonStats"
	$buttonStats.Size = '75, 23'
	$buttonStats.TabIndex = 0
	$buttonStats.Text = "Stats"
	$buttonStats.UseVisualStyleBackColor = $True
	$buttonStats.add_Click($buttonStats_Click)
	#
	# groupbox3
	#
	$groupbox3.Controls.Add($buttonCalendar)
	$groupbox3.Controls.Add($buttonInbox)
	$groupbox3.Location = '13, 96'
	$groupbox3.Name = "groupbox3"
	$groupbox3.Size = '193, 51'
	$groupbox3.TabIndex = 4
	$groupbox3.TabStop = $False
	$groupbox3.Text = "Permissions"
	#
	# buttonCalendar
	#
	$buttonCalendar.Location = '105, 19'
	$buttonCalendar.Name = "buttonCalendar"
	$buttonCalendar.Size = '73, 23'
	$buttonCalendar.TabIndex = 5
	$buttonCalendar.Text = "Calendar"
	$buttonCalendar.UseVisualStyleBackColor = $True
	$buttonCalendar.add_Click($buttonCalendar_Click)
	#
	# buttonInbox
	#
	$buttonInbox.Font = "Microsoft Sans Serif, 8.25pt"
	$buttonInbox.Location = '13, 19'
	$buttonInbox.Name = "buttonInbox"
	$buttonInbox.Size = '73, 23'
	$buttonInbox.TabIndex = 2
	$buttonInbox.Text = "Inbox"
	$buttonInbox.UseVisualStyleBackColor = $True
	$buttonInbox.add_Click($buttonInbox_Click)
	#
	# resultWindow
	#
	$resultWindow.Location = '12, 153'
	$resultWindow.Name = "resultWindow"
	$resultWindow.ReadOnly = $True
	$resultWindow.Size = '415, 204'
	$resultWindow.TabIndex = 3
	$resultWindow.Text = ""
	#
	# statusbar1
	#
	$statusbar1.Location = '0, 366'
	$statusbar1.Name = "statusbar1"
	$statusbar1.Size = '439, 22'
	$statusbar1.TabIndex = 2
	$statusbar1.Text = "$statusbar"
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($buttonRun)
	$groupbox1.Controls.Add($groupbox2)
	$groupbox1.Font = "Microsoft Sans Serif, 8.25pt, style=Bold"
	$groupbox1.Location = '13, 13'
	$groupbox1.Name = "groupbox1"
	$groupbox1.Size = '414, 77'
	$groupbox1.TabIndex = 0
	$groupbox1.TabStop = $False
	$groupbox1.Text = "Account Information"
	#
	# buttonRun
	#
	$buttonRun.Font = "Microsoft Sans Serif, 8.25pt"
	$buttonRun.Location = '205, 19'
	$buttonRun.Name = "buttonRun"
	$buttonRun.Size = '75, 23'
	$buttonRun.TabIndex = 1
	$buttonRun.Text = "Run"
	$buttonRun.UseVisualStyleBackColor = $True
	$buttonRun.add_MouseClick($buttonRun_MouseClick)
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($username)
	$groupbox2.Font = "Microsoft Sans Serif, 8.25pt"
	$groupbox2.Location = '6, 19'
	$groupbox2.Name = "groupbox2"
	$groupbox2.Size = '172, 49'
	$groupbox2.TabIndex = 0
	$groupbox2.TabStop = $False
	$groupbox2.Text = "Username"
	#
	# username
	#
	$username.Location = '7, 20'
	$username.Name = "username"
	$username.Size = '156, 20'
	$username.TabIndex = 0
	$username.add_KeyPress($username_KeyPress)
	$groupbox2.ResumeLayout($false)
	$groupbox1.ResumeLayout($false)
	$groupbox3.ResumeLayout($false)
	$groupbox4.ResumeLayout($false)
	$formExchangeAccountQuery.ResumeLayout($false)
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formExchangeAccountQuery.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formExchangeAccountQuery.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formExchangeAccountQuery.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formExchangeAccountQuery.ShowDialog()

} #End Function

#Call OnApplicationLoad to initialize
if((OnApplicationLoad) -eq $true)
{
	#Call the form
	Call-OutlookGUI_psf | Out-Null
	#Perform cleanup
	OnApplicationExit
}
